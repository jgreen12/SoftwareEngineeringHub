//Pseudo code for the Software Engineering Project. 
//Design Workflow portion
//Author: Joshua Green


begin class WeeklyServices
	struct ServiceItem{
		variable date
		variable provider
		variable service
	}
	
	file WeeklyServicesOutput

	begin public function void printWeeklyServices()
		/*called by system during Manager request to print the services 
		provided that week*/
		ServiceItem CurrentServiceItem
		
		
		open connection to ChocAnDatabase
		open ServicesRecord file
		begin loop do while( Not End of File && CurrentServiceItem date >= beginning of the week 
		&& CurrentServiceItem date <= end of the week)
			read file ServicesRecord line 1 store in CurrentServiceItem
			if (CurrentServiceItem CurrentServiceItem date >= beginning of the week 
			&& CurrentServiceItem date <= end of the week)
				if (file WeeklyServicesOutput does not exist)
					new file WeeklyServicesOutput
				open file WeeklyServicesOutput
				append CurrentServiceItem to file WeeklyServicesOutput
			end if
		end loop
		if (file WeeklyServicesOutput is open)
			close file WeeklyServicesOutput
		close ServicesRecord file
		close connection to ChocAnDatabase
		print(WeeklyServicesOutput)
	end printWeeklyServices
end WeeklyServices


begin class Print
	begin public function printData(file item)
		open file item
		ServiceItem CurrentServiceItem  
		
		begin loop do while(not end of file)
			CurrentServiceItem equal to current line
			output CurrentServiceItem
			go to next line
		end loop
		close file item
	end PrintData
end Print


begin class Services
	/* Contains functions to list services and request them */
	begin public function RequestServices()
		/* called when a user requests services*/
		ListServices()
		input user's choice
		sendMessage(provider of service ID, userID, ServiceItem)
	end function RequestServices
	
	begin private function ListServices()
		begin loop for (number of services available)
			output services on screen
		end loop
	end function ListServices
end Services

begin class Message
	public function sendMessage(Message MessageItem)
		open messages file
		write MessageItem to file
		close messages file
	end sendMessage
	
	public function receiveMessage(userID)
		open messages file
		open myMessages file
		begin loop while(not end of file)
			find items with matching userID in To field
			append items to myMessages file
		end loop
		close myMessages file
		close messages file
		
	end receiveMessage
	
	public function printMessages()
		open myMessages file
		begin loop while(not end of file)
			print items in myMessages file
		end loop
		close myMessages file
	end printMessage
end Message
